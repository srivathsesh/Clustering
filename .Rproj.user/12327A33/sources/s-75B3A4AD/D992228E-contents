---
title: "Market Segmentation"
author: "Sri Seshadri"
date: "10/13/2018"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
load("apphappyData.RData")
library(dplyr)
library(magrittr)
library(caret)
```

## Introduction

## Executive Summary

## Data

```{r}

SurveyData <- apphappy.3.num.frame
Summary <- skimr::skim(SurveyData)

```


## Exploratory Data Analysis

```{r}
SurveyData %<>% select(-q5r1,-q2r10)
cormat <- cor(SurveyData,use = "complete.obs")
corrplot::corrplot(cormat,tl.cex = 0.6)
```

## Grouping Questions by Type

Question 24 can be grouped into two sections - Consumer Attitude and Technology Use


```{r}
TechAttitude <- paste0("q24r",c(1,2,4,5,6))
TechUseSocial <- paste0("q24r",c(9,10,11,12))
TechUseMusic <- paste0("q24r",c(7))
TechUseVideo <- paste0("q24r",c(8))

ShoppingAttitude <- paste0("q26r",c(3,4,5,6,18,7,13,14,15,16))
AppPref <- paste0("q24r",c(8,9,10,11,12))



SurveyData %>% 
  select(!!TechAttitude) %>% 
  rowMeans(.) -> TechAttitudeMean

SurveyData %>% 
  select(!!TechUseSocial) %>% 
  rowMeans(.) -> TechUseSocialMean

SurveyData %>% 
  select(!!TechUseMusic) %>% 
  rowMeans(.) -> TechUseMusiclMean

SurveyData %>% 
  select(!!TechUseVideo) %>% 
  rowMeans(.) -> TechUseVideoMean

SurveyData %>% 
  select(!!ShoppingAttitude) %>% 
  rowMeans(.) -> ShoppingAttitudeMean

SurveyData %>% 
  select(!!AppPref) %>% 
  rowMeans(.) -> AppPrefMean

SurveyData %>% 
  select(q13r1,q13r2,q13r3,q13r11) %>% 
  rowMeans(.) -> SocialWebMean

SurveyData %>% 
  select(q13r4,q13r7,q13r8,q13r9) %>% 
  rowMeans(.) -> RadioWebMean

SurveyData %>% 
  select(q13r5,q13r6,q13r10,q13r11) %>% 
  rowMeans(.) -> VideoWebMean

SurveyData %>% 
  select(starts_with('q24')) %>% 
  mutate(q24r6 = q24r6*-1) %>% 
  rowSums(.)/12-> LeaderMean


SurveyData <- cbind.data.frame(SurveyData
                               ,TechAttitudeMean
                               ,TechUseSocialMean
                               ,ShoppingAttitudeMean
                               ,AppPrefMean
                               ,SocialWebMean
                               ,RadioWebMean
                               ,VideoWebMean
                               ,LeaderMean)

# Remove redundant Questions 

SurveyData %<>%
  select(-starts_with('q24r')) %>% 
  select(-starts_with('q25r')) %>% 
  select(-starts_with('q26r')) %>% 
  select(-starts_with('q13r')) %>% 
  select(-starts_with('q50r')) %>% 
  select(-starts_with('q2r')) %>% 
  select(-starts_with('q12')) %>% 
  select(-starts_with('q49')) %>% 
  select(-q48,-q11,-q55,-q54)

# Remove CaseID and make it a rowname instead

  `rownames<-`(SurveyData,SurveyData$caseID)
  SurveyData %<>% select(-caseID) 
```

```{r}
cormat <- cor(SurveyData,use = "complete.obs")
corrplot::corrplot.mixed(cormat,tl.cex = 0.6,addCoefasPercent = T,number.cex=0.6)


```


```{r}
RedundantInfo <- colnames(cormat)[caret::findCorrelation(cormat)]
SurveyData %<>% 
  select(-AppPrefMean)
```

# Impute missing data

```{r,message=F}

imputedData <- mice::mice(SurveyData,printFlag = F)
SurveyData <- mice::complete(imputedData)
```

# Center and Standardize

```{r}
library(recipes)

rec <- recipe(SurveyData) %>% 
  step_center(everything()) %>% 
  step_scale(everything())

SurveyDataPrep <- prep(rec,training = SurveyData, retain = T)
#SurveyDataStd <- bake(SurveyDataPrep, newdata = SurveyData)
SurveyDataStd <- juice(SurveyDataPrep)


```

# Get bootstrap samples

```{r}
set.seed(10)
bt_sampples <- rsample::bootstraps(SurveyDataStd, times = 25)
```

# Hierarchical cluster

```{r}
library(rsample)

# used first few samples' dendrogram to decide on the cut height to be 10
hierCluster <- function(sampleSplit){
  hc <- hclust(dist(analysis(sampleSplit)))
  cutree(hc,h=11)
}

bt_sampples %<>%
  mutate(HC = map(splits,hierCluster))

hist(map_dbl(bt_sampples$HC,max),
     main = 'Clusters in the 25 bootstrap samples',col = 'red',
     xlab = 'Number of Clusters')

```

# Applying 4 cluster solution to the hierarchical clusters

```{r}
hc <- hclust(dist(SurveyDataStd))
hClusters <- cutree(hc,k = 4)

plot(cluster::silhouette(hClusters,daisy(SurveyDataStd)))
```

# R-Square stats for Hieracrchical


# K-mean Clustering

```{r}
library(cluster)
library(factoextra)
fviz_nbclust(SurveyDataStd,kmeans, method = "wss")

kmClusters <- kmeans(SurveyDataStd,6)

fviz_cluster(kmClusters,SurveyDataStd,  geom = "point", 
             ellipse= F, show.clust.cent = F,
             palette = "jco", ggtheme = theme_classic())
```

# pam

```{r}
fviz_nbclust(SurveyDataStd, pam, method = "wss")
pamclust <- pam(SurveyDataStd,5)
fviz_cluster(pamclust, 
             palette = "jco", # color palette
             ellipse = F,
             #ellipse.type = "t", # Concentration ellipse
             repel = F, # Avoid label overplotting (slow)
             labelsize = 3,
             ggtheme = theme_classic()
             )
```

# dbscan

```{r}
dbscan::kNNdistplot(SurveyDataStd, k =  6)
abline(h = 4.5, lty = 2)
```

```{r}
set.seed(123)
db <- fpc::dbscan(SurveyDataStd, eps = 4.5, MinPts = 5)
# Plot DBSCAN results
library("factoextra")
fviz_cluster(db, data = SurveyDataStd, stand = FALSE,
             ellipse = FALSE, show.clust.cent = FALSE,
             geom = "point",palette = "jco", ggtheme = theme_classic())
```

# tsne

```{r}
tsne <- Rtsne::Rtsne(SurveyDataStd,dims = 2, perplexity=30, verbose=TRUE, max_iter = 500,pca_center = F)

dbscan::kNNdistplot(tsne$Y, k =  6)
abline(h = 1.5, lty = 2)
```

```{r}
db2 <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 3)
# Plot DBSCAN results
library("factoextra")
tsnedf <- tsne$Y
colnames(tsnedf) <- c('PC1','PC2')
fviz_cluster(db2, data = tsnedf, stand = FALSE,
             ellipse = FALSE, show.clust.cent = FALSE,
             geom = "point", ggtheme = theme_classic())
```

