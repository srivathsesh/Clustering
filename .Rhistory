plot(hclust(dist(analysis(bt_sampples$splits[1]))))
plot(hclust(dist(analysis(bt_sampples$splits[1]))))
library(rsample)
# used first few samples' dendrogram to decide on the cut height to be 10
hierCluster <- function(sampleSplit){
hc <- hclust(dist(analysis(sampleSplit)))
cutree(hc,h=11)
}
bt_sampples %<>%
mutate(HC = map(splits,hierCluster))
hist(map_dbl(bt_sampples$HC,max),
main = 'Clusters in the 25 bootstrap samples',col = 'red',
xlab = 'Number of Clusters')
hist(map_dbl(bt_sampples$HC,max),
main = 'Clusters in the 25 bootstrap samples',col = 'red',
xlab = 'Number of Clusters')
tsne <- Rtsne::Rtsne(SurveyDataStd,dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
plot(tsne$Y, t='n', main="tsne")
tsne$Y
plot(tsne$Y, main="tsne")
tsne <- Rtsne::Rtsne(SurveyData,dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
plot(tsne$Y, main="tsne")
tsne <- Rtsne::Rtsne(SurveyDataStd,dims = 2, perplexity=30, verbose=TRUE, max_iter = 500)
plot(tsne$Y, main="tsne")
tsne <- Rtsne::Rtsne(SurveyDataStd,dims = 2, perplexity=30, verbose=TRUE, max_iter = 500,pca_center = F)
plot(tsne$Y, main="tsne")
dbscan::kNNdistplot(tsne$Y, k =  6)
dbscan::kNNdistplot(tsne$Y, k =  6)
abline(h = 4.5, lty = 1.8)
dbscan::kNNdistplot(tsne$Y, k =  6)
abline(h = 4.5, lty = 1.8)
dbscan::kNNdistplot(tsne$Y, k =  6)
abline(h = 1.5, lty = 1.8)
dbscan::kNNdistplot(tsne$Y, k =  6)
abline(h = 1.5, lty = 2)
db <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 5)
# Plot DBSCAN results
library("factoextra")
fviz_cluster(db, data = SurveyDataStd, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point",palette = "jco", ggtheme = theme_classic())
db <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 5)
# Plot DBSCAN results
library("factoextra")
fviz_cluster(db, data = tsne$Y, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point",palette = "jco", ggtheme = theme_classic())
db <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 5)
# Plot DBSCAN results
library("factoextra")
tsnedf <- tsne$Y
colnames(tsnedf) <- c('PC1','PC2')
fviz_cluster(db, data = tsnedf, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point",palette = "jco", ggtheme = theme_classic())
db2 <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 5)
# Plot DBSCAN results
library("factoextra")
tsnedf <- tsne$Y
colnames(tsnedf) <- c('PC1','PC2')
fviz_cluster(db2, data = tsnedf, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point",palette = "jco", ggtheme = theme_classic())
db2 <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 10)
# Plot DBSCAN results
library("factoextra")
tsnedf <- tsne$Y
colnames(tsnedf) <- c('PC1','PC2')
fviz_cluster(db2, data = tsnedf, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point",palette = "jco", ggtheme = theme_classic())
db2 <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 6)
# Plot DBSCAN results
library("factoextra")
tsnedf <- tsne$Y
colnames(tsnedf) <- c('PC1','PC2')
fviz_cluster(db2, data = tsnedf, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point",palette = "jco", ggtheme = theme_classic())
fviz_cluster(db2, data = tsnedf, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point", ggtheme = theme_classic())
fviz_cluster(db2, data = tsnedf, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point", ggtheme = theme_classic())
db2 <- fpc::dbscan(tsne$Y, eps = 1.5, MinPts = 3)
# Plot DBSCAN results
library("factoextra")
tsnedf <- tsne$Y
colnames(tsnedf) <- c('PC1','PC2')
fviz_cluster(db2, data = tsnedf, stand = FALSE,
ellipse = FALSE, show.clust.cent = FALSE,
geom = "point", ggtheme = theme_classic())
